{% import "time" %}
{% import "fmt" %}
{% import "github.com/nanzhong/tstr/db" %}
{% import  "github.com/jackc/pgtype" %}

{% code
type RunsPage struct {
    Runs []db.UIListRecentRunsRow
    HasPendingRuns bool
    HasFinishedRuns bool
}
%}

{% func (p *RunsPage) Title() %}
Tester
{% endfunc %}

{% func fmtAbsTime(t time.Time) %}
    {%s t.Format("2006-01-02 15:04:05") %}
{% endfunc %}

{% func fmtRelativeTime(t time.Time) %}
    {%s fmt.Sprintf("%s ago", time.Since(t).Round(time.Second).String()) %}
{% endfunc %}

{% func timeCell(timestamp pgtype.Timestamptz) %}
    <span data-toggle="tooltip" data-placement="top" title="{%s fmtAbsTime(timestamp.Time) %}">{%s fmtRelativeTime(timestamp.Time) %}</span>
{% endfunc %}

{% func (p *RunsPage) Body() %}
<div class="runs">
  
  <div class="row">
    <div class="col">
      <h1 class="h5">Pending Runs</h1>
      {% if p.HasPendingRuns %}
      <table class="table table-sm">
        <thead>
          <tr>
            <th scope="col">ID</th>
            <th scope="col">Labels</th>
            <th scope="col">Args</th>
            <th scope="col">Enqueued At</th>
            <th scope="col">Started At</th>
            <th scope="col">Runner</th>
          </tr>
        </thead>
        <tbody>

        {% for _, run := range p.Runs %}
        {% if run.FinishedAt.Status == pgtype.Null %}
          <tr>
            <td scope="row"><a href="/runs/{%s run.ID %}">{%s run.ID %}<i class="fas fa-link"></i></a></td>
            <td scope="row">
            {% for _, label := range labelsAsSlice(run.Labels,": ") %}
            <span class="badge bg-secondary">{%s label %}</span>
            {% endfor %}
            </td>
            <td scope="row"> {% for _, arg := range run.Args %} <span class="badge bg-secondary">{%s arg %}</span> {% endfor %} </td>
            <td>{%= timeCell(run.ScheduledAt) %}</td>
            <td>{% if run.StartedAt.Status == pgtype.Present  %} {%= timeCell(run.StartedAt) %} {% endif %}</td>
            <td>{%s run.RunnerName %} </td>
          </tr>
          {% endif %}
          {% endfor %}
        </tbody>
      </table>
      {% else %}
      <p>No pending runs...</p>
      {% endif %}
    </div>
  </div>


  <div class="row">
    <div class="col">
      <h1 class="h5">Recently Finished Runs (Last 50)</h1>
      {% if p.HasFinishedRuns %}
      <table class="table table-sm">
        <thead>
          <tr>
            <th scope="col">ID</th>
            <th scope="col">Labels</th>
            <th scope="col">Args</th>
            <th scope="col">Enqueued At</th>
            <th scope="col">Started At</th>
            <th scope="col">Finished At</th>
            <th scope="col">Result</th>
            <th scope="col">Runner</th>
          </tr>
        </thead>
        <tbody>
        {% for _, run := range p.Runs[:50]  %}
        {% if run.FinishedAt.Status == pgtype.Present %}
          <tr>
            <td><a href="/runs/{%s run.ID %}">{%s run.ID %}<i class="fas fa-link"></i></a></td>
            <td>
            {% for _, label := range labelsAsSlice(run.Labels,": ") %}
            <span class="badge bg-secondary">{%s label %}</span>
            {% endfor %}
            </td>
            <td>{% for _, arg := range run.Args %} <span class="badge bg-secondary">{%s arg %}</span> {% endfor %}</td>
            <td>{%= timeCell(run.ScheduledAt) %}</td>
            <td>{%= timeCell(run.StartedAt) %}</td>
            <td>{%= timeCell(run.FinishedAt) %}</td>
            <td>
            {% if run.Result == db.RunResultPass %}
            <span class="badge bg-success">{%s string(run.Result) %}</span>
            {% else %}
            <span class="badge bg-danger">{%s string(run.Result) %}</span>
            {% endif %}
            </td>
            <td>{%s run.RunnerName %} </td>
          </tr>
          {% endif %}
          {% endfor %}
        </tbody>
      </table>
      {% else %}
      <p>No finished runs...</p>
      {% endif %}
    </div>
  </div>
</div>
{% endfunc %}

